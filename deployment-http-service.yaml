---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: recommender-app
  namespace: recommender
spec:
  replicas: 2
  selector:
    matchLabels:
      app: recommender-app
      role: http-web-service
  template:
    metadata:
      labels:
        app: recommender-app
        role: http-web-service
    spec: 
      containers:          
        - name: java  
          image: public.ecr.aws/awsvijisarathy/http-service-eks-private-nat:1.0
          imagePullPolicy: Always   
          env:
            - name: TIME_SERVICE_HOST
              value: "XXXXXX"
            - name: TIME_SERVICE_PORT
              value: "80"
            - name: POSTGRES_USER
              valueFrom:
                    secretKeyRef:
                      name: postgres-credentials
                      key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                    secretKeyRef:
                      name: postgres-credentials
                      key: POSTGRES_PASSWORD
            - name: POSTGRES_DATABASE
              valueFrom:
                    secretKeyRef:
                      name: postgres-credentials
                      key: POSTGRES_DATABASE               
            - name: POSTGRES_HOST
              valueFrom:
                    secretKeyRef:
                      name: postgres-credentials
                      key: POSTGRES_HOST  
            - name: POSTGRES_PORT
              valueFrom:
                    secretKeyRef:
                      name: postgres-credentials
                      key: POSTGRES_PORT                        
            - name: POSTGRES_TABLEPREFIX
              valueFrom:
                    secretKeyRef:
                      name: postgres-credentials
                      key: POSTGRES_TABLEPREFIX       
          ports:
            - containerPort: 8080
              name: http 
              protocol: TCP
          resources:
            requests:
              cpu: "500m"
              memory: "256Mi"
            limits:
              cpu: "500m" 
              memory: "1000Mi"
          livenessProbe:
            httpGet: 
              path: /live
              port: 8080
            initialDelaySeconds: 15
            timeoutSeconds: 1
            periodSeconds: 10
            failureThreshold: 3            
          readinessProbe:
            httpGet: 
              path: /ready
              port: 8080
            initialDelaySeconds: 15
            timeoutSeconds: 1
            periodSeconds: 10
            failureThreshold: 3        
            
---
apiVersion: v1
kind: Service
metadata:
  name: recommender-svc
  namespace: recommender
spec:
  sessionAffinity: None
  type: ClusterIP  
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: recommender-app
    role: http-web-service

